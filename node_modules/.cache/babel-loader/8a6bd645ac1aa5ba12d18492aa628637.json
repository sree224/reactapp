{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/ReactApp/straming-app-demo/src/components/CardElements.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst CardTitle = ({\n  link,\n  children\n}) => /*#__PURE__*/React.createElement(\"h2\", {\n  className: \"card__title\"\n}, /*#__PURE__*/React.createElement(Link, {\n  to: link\n}, children));\n\nconst CardTag = ({\n  link,\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card__tag\"\n}, /*#__PURE__*/React.createElement(Link, {\n  to: link\n}, children));\n\nconst ProgressBar = ({\n  color,\n  completed,\n  total\n}) => {\n  const percent = Number((completed / total * 100).toFixed(0));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar__container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar__progress\",\n    style: {\n      width: `${percent}%`,\n      background: `${color}`\n    }\n  }));\n};\n\nconst CardStatus = ({\n  children,\n  color\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"card__status\"\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: `card__status--container`\n}, \" \", children, \" \"));\n\nconst CardFavBtn = ({\n  children,\n  onClick\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: \"fav-btn\",\n  onClick: onClick\n}, children);\n\nCardTitle.propTypes = {\n  link: propTypes.string,\n  children: propTypes.node\n};\nCardTag.propTypes = {\n  link: propTypes.string,\n  children: propTypes.node\n};\nProgressBar.propTypes = {\n  completed: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  color: propTypes.string\n};\nCardStatus.propTypes = {\n  children: propTypes.node,\n  color: propTypes.string\n};\nCardFavBtn.propTypes = {\n  children: propTypes.node,\n  onClick: propTypes.func\n};\nexport { CardTitle, CardTag, CardStatus, CardFavBtn, ProgressBar };","map":{"version":3,"sources":["/home/ubuntu/ReactApp/straming-app-demo/src/components/CardElements.js"],"names":["React","propTypes","Link","CardTitle","link","children","CardTag","ProgressBar","color","completed","total","percent","Number","toFixed","width","background","CardStatus","CardFavBtn","onClick","string","node","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBAChB;AAAI,EAAA,SAAS,EAAC;AAAd,gBACE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAED;AAAV,GAAiBC,QAAjB,CADF,CADF;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAAEF,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBACd;AAAK,EAAA,SAAS,EAAC;AAAf,gBACE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAED;AAAV,GAAiBC,QAAjB,CADF,CADF;;AAKA,MAAME,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAiC;AACnD,QAAMC,OAAO,GAAGC,MAAM,CAAC,CAAEH,SAAS,GAAGC,KAAb,GAAsB,GAAvB,EAA4BG,OAA5B,CAAoC,CAApC,CAAD,CAAtB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAEH,OAAQ,GAApB;AAAwBI,MAAAA,UAAU,EAAG,GAAEP,KAAM;AAA7C;AAFT,IADF,CADF;AAQD,CAVD;;AAWA,MAAMQ,UAAU,GAAG,CAAC;AAAEX,EAAAA,QAAF;AAAYG,EAAAA;AAAZ,CAAD,kBACjB;AAAK,EAAA,SAAS,EAAC;AAAf,gBACE;AAAM,EAAA,SAAS,EAAG;AAAlB,QAA8CH,QAA9C,MADF,CADF;;AAMA,MAAMY,UAAU,GAAG,CAAC;AAAEZ,EAAAA,QAAF;AAAYa,EAAAA;AAAZ,CAAD,kBACjB;AAAQ,EAAA,SAAS,EAAC,SAAlB;AAA4B,EAAA,OAAO,EAAEA;AAArC,GACGb,QADH,CADF;;AAMAF,SAAS,CAACF,SAAV,GAAsB;AACpBG,EAAAA,IAAI,EAAEH,SAAS,CAACkB,MADI;AAEpBd,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB;AAFA,CAAtB;AAKAd,OAAO,CAACL,SAAR,GAAoB;AAClBG,EAAAA,IAAI,EAAEH,SAAS,CAACkB,MADE;AAElBd,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB;AAFF,CAApB;AAKAb,WAAW,CAACN,SAAZ,GAAwB;AACtBQ,EAAAA,SAAS,EAAER,SAAS,CAACoB,MAAV,CAAiBC,UADN;AAEtBZ,EAAAA,KAAK,EAAET,SAAS,CAACoB,MAAV,CAAiBC,UAFF;AAGtBd,EAAAA,KAAK,EAAEP,SAAS,CAACkB;AAHK,CAAxB;AAMAH,UAAU,CAACf,SAAX,GAAuB;AACrBI,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB,IADC;AAErBZ,EAAAA,KAAK,EAAEP,SAAS,CAACkB;AAFI,CAAvB;AAKAF,UAAU,CAAChB,SAAX,GAAuB;AACrBI,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB,IADC;AAErBF,EAAAA,OAAO,EAAEjB,SAAS,CAACsB;AAFE,CAAvB;AAKA,SAASpB,SAAT,EAAoBG,OAApB,EAA6BU,UAA7B,EAAyCC,UAAzC,EAAqDV,WAArD","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst CardTitle = ({ link, children }) => (\n  <h2 className=\"card__title\">\n    <Link to={link}>{children}</Link>\n  </h2>\n);\n\nconst CardTag = ({ link, children }) => (\n  <div className=\"card__tag\">\n    <Link to={link}>{children}</Link>\n  </div>\n);\nconst ProgressBar = ({ color, completed, total }) => {\n  const percent = Number(((completed / total) * 100).toFixed(0));\n  return (\n    <div className=\"progress-bar__container\">\n      <div\n        className=\"progress-bar__progress\"\n        style={{ width: `${percent}%`, background: `${color}` }}\n      ></div>\n    </div>\n  );\n};\nconst CardStatus = ({ children, color }) => (\n  <div className=\"card__status\">\n    <span className={`card__status--container`}> {children} </span>\n  </div>\n);\n\nconst CardFavBtn = ({ children, onClick }) => (\n  <button className=\"fav-btn\" onClick={onClick}>\n    {children}\n  </button>\n);\n\nCardTitle.propTypes = {\n  link: propTypes.string,\n  children: propTypes.node,\n};\n\nCardTag.propTypes = {\n  link: propTypes.string,\n  children: propTypes.node,\n};\n\nProgressBar.propTypes = {\n  completed: propTypes.number.isRequired,\n  total: propTypes.number.isRequired,\n  color: propTypes.string,\n};\n\nCardStatus.propTypes = {\n  children: propTypes.node,\n  color: propTypes.string,\n};\n\nCardFavBtn.propTypes = {\n  children: propTypes.node,\n  onClick: propTypes.func,\n};\n\nexport { CardTitle, CardTag, CardStatus, CardFavBtn, ProgressBar };\n"]},"metadata":{},"sourceType":"module"}